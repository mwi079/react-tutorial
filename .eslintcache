[{"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\index.js":"1","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\App.js":"2","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\reportWebVitals.js":"3","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\game.js":"4","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\board.js":"5","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\square.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":207,"mtime":1607965396799,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2124,"mtime":1607963322604,"results":"11","hashOfConfig":"8"},{"size":750,"mtime":1607965182253,"results":"12","hashOfConfig":"8"},{"size":208,"mtime":1607966539614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"snitc8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\index.js",[],["28","29"],"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\App.js",[],"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\reportWebVitals.js",[],"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\game.js",["30"],"import React from 'react';\nimport Board from './board';\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ? false : true,\n    });\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber+1)\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if(winner){\n      status = 'Winner: ' + winner;\n    }else{\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Move #' + move : 'Game start';\n      return (\n        <li key={move}>\n          <a href=\"#\" onClick={() => this.jumpTo(move)}>{desc}</a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i)=>this.handleClick(i)}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Game","C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\board.js",[],"C:\\Users\\HP-Omen\\Desktop\\Coding\\_react\\tutorial\\src\\square.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":71,"column":11,"nodeType":"37","endLine":71,"endColumn":57},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]